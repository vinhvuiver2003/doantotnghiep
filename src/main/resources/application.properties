spring.application.name=demo
# Sql connection
spring.datasource.url=${DATASOURCE_URL}
spring.datasource.username=${DATASOURCE_USER}
spring.datasource.password=${DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

#  JPA/Hibernate config
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.hibernate.ddl-auto=update



# C?u h?nh logging
logging.level.org.springframework.web=INFO
logging.level.org.hibernate=ERROR
logging.level.com.example=DEBUG

# JWT Properties
fashion.app.jwtSecret=${JWT_SECRET_KEY}
fashion.app.jwtExpirationMs=86400000


# SePay Configuration


# config emails
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${EMAIL_USERNAME}
spring.mail.password=${EMAIL_KEY}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000

# config time out
app.password-reset.token-expiry-minutes=60

# File Upload Configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
app.file.upload-dir=./uploads/images
app.file.product-image-dir=products
app.file.access-path=/images/**

# Freemarker Configuration
spring.freemarker.template-loader-path=classpath:/templates/
spring.freemarker.suffix=.html
spring.freemarker.cache=false
spring.freemarker.enabled=true
spring.freemarker.check-template-location=true
spring.freemarker.content-type=text/html
spring.freemarker.charset=UTF-8

# Email URLs and Expiry Time
app.email.verification-base-url=${frontend.url}/verify-account
app.email.password-reset-base-url=${frontend.url}/reset-password
app.email.verification-expiry-hours=24




#prompt
chatbot.system.prompt=B?n l� m?t tr? l� ?o h? tr? cho c?a h�ng th?i trang vqx store, b?n l� m?t ng??i h? tr? b�n h�ng th�n thi?n

#api
api.products=${backend.url}/api/products
api.promotions=${backend.url}/api/promotions/active
api.top_rated=${backend.url}/api/products/top-rated?limit=5
api.new_arrivals=${backend.url}/api/products/new-arrivals?limit=5
api.best_selling=${backend.url}/api/products/best-selling?limit=5
api.categories=${backend.url}/api/categories
api.brands=${backend.url}/api/brands
api.user_orders=${backend.url}/api/users/me/orders

# OpenAPI Swagger Configuration
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.tryItOutEnabled=true
springdoc.swagger-ui.filter=true
springdoc.swagger-ui.syntaxHighlight.activated=true
springdoc.default-produces-media-type=application/json
springdoc.default-consumes-media-type=application/json

# MoMo Configuration
momo.partner-code=${MOMO_PARTNER_CODE}
momo.access-key=${MOMO_ACCESS_KEY}
momo.secret-key=${MOMO_SECRET_KEY}
momo.endpoint=https://test-payment.momo.vn/v2/gateway/api/create
momo.return-url=/api/payments/momo-return
momo.notify-url=/api/payments/momo-notify

# Application Configuration
app.base-url=${backend.url}

# Mistral AI Configuration
mistral.api.url=https://api.mistral.ai/v1/chat/completions
mistral.api.key=${MISTRAL_KEY}
mistral.model=mistral-tiny

frontend.url=${FRONTEND_URL}
backend.url=${BACKEND_URL}